var de=Object.defineProperty;var ae=(n,e,t)=>e in n?de(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var q=(n,e,t)=>ae(n,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const r of o.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&s(r)}).observe(document,{childList:!0,subtree:!0});function t(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerPolicy&&(o.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?o.credentials="include":i.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(i){if(i.ep)return;i.ep=!0;const o=t(i);fetch(i.href,o)}})();class le{generateId(){return Date.now().toString(36)+Math.random().toString(36).substring(2)}getItems(e){const t=localStorage.getItem(e);return t?JSON.parse(t):[]}saveItems(e,t){localStorage.setItem(e,JSON.stringify(t))}getForms(){return this.getItems("forms")}getFormById(e){return this.getForms().find(s=>s.id===e)||null}saveForm(e){const t=this.getForms(),s=Date.now();if(e.id){const o=t.findIndex(r=>r.id===e.id);if(o>=0){const r={...t[o],...e,updatedAt:s};return t[o]=r,this.saveItems("forms",t),r}}const i={...e,id:e.id||this.generateId(),createdAt:s,updatedAt:s};return t.push(i),this.saveItems("forms",t),i}deleteForm(e){const t=this.getForms(),s=t.filter(i=>i.id!==e);return s.length<t.length?(this.saveItems("forms",s),this.deleteFormSubmissions(e),!0):!1}getFormSubmissions(e){return this.getItems("submissions").filter(s=>s.formId===e)}saveFormSubmission(e,t){const s=this.getItems("submissions"),i={id:this.generateId(),formId:e,responses:t,submittedAt:Date.now()};return s.push(i),this.saveItems("submissions",s),i}deleteFormSubmissions(e){const s=this.getItems("submissions").filter(i=>i.formId!==e);this.saveItems("submissions",s)}}var d=(n=>(n.TEXT="text",n.RADIO="radio",n.CHECKBOX="checkbox",n.DROPDOWN="dropdown",n))(d||{});class ce{validateFormSubmission(e,t){const s=[],i=t.reduce((o,r)=>(o[r.fieldId]=r,o),{});return e.fields.forEach(o=>{const r=i[o.id];if(o.required){if(!r){s.push(`Field "${o.label}" is required but no response was provided.`);return}o.type===d.TEXT&&(!r.value||r.value.trim()==="")?s.push(`Field "${o.label}" is required but was left empty.`):o.type===d.RADIO&&(!r.value||r.value.trim()==="")?s.push(`Field "${o.label}" is required but no option was selected.`):o.type===d.DROPDOWN&&(!r.value||r.value.trim()==="")?s.push(`Field "${o.label}" is required but no option was selected.`):o.type===d.CHECKBOX&&(!r.value||r.value.length===0)&&s.push(`Field "${o.label}" is required but no option was selected.`)}if(r){if(o.type===d.TEXT&&typeof r.value!="string"?s.push(`Field "${o.label}" requires a text response.`):o.type===d.RADIO&&typeof r.value!="string"?s.push(`Field "${o.label}" requires a single selected option.`):o.type===d.DROPDOWN&&typeof r.value!="string"?s.push(`Field "${o.label}" requires a single selected option.`):o.type===d.CHECKBOX&&!Array.isArray(r.value)&&s.push(`Field "${o.label}" requires checkbox selections.`),(o.type===d.RADIO||o.type===d.DROPDOWN)&&o.options)o.options.map(c=>c.id).includes(r.value)||s.push(`Field "${o.label}" contains an invalid selection.`);else if(o.type===d.CHECKBOX&&o.options){const l=o.options.map(c=>c.id);r.value.every(c=>l.includes(c))||s.push(`Field "${o.label}" contains invalid selections.`)}}}),s}}class ue{constructor(e){q(this,"storageService");this.storageService=e}getAllForms(){return this.storageService.getForms()}getForm(e){return this.storageService.getFormById(e)}createForm(e,t){return this.storageService.saveForm({title:e,description:t,fields:[]})}updateFormDetails(e,t,s){const i=this.getForm(e);return i?this.storageService.saveForm({...i,title:t,description:s}):null}addField(e,t,s,i=!1,o=[]){const r=this.getForm(e);if(!r)return null;const l={id:Date.now().toString(36)+Math.random().toString(36).substring(2),type:t,label:s,required:i,order:r.fields.length,...t!==d.TEXT?{options:o}:{}},c={...r,fields:[...r.fields,l]};return this.storageService.saveForm(c)}updateField(e,t,s){const i=this.getForm(e);if(!i)return null;const o=i.fields.findIndex(c=>c.id===t);if(o===-1)return null;const r=[...i.fields];r[o]={...r[o],...s};const l={...i,fields:r};return this.storageService.saveForm(l)}deleteField(e,t){const s=this.getForm(e);if(!s)return null;const i=s.fields.filter(r=>r.id!==t);i.forEach((r,l)=>{r.order=l});const o={...s,fields:i};return this.storageService.saveForm(o)}reorderFields(e,t){const s=this.getForm(e);if(!s||t.length!==s.fields.length||!t.every(l=>s.fields.some(c=>c.id===l)))return null;const i=s.fields.reduce((l,c)=>(l[c.id]=c,l),{}),o=t.map((l,c)=>({...i[l],order:c})),r={...s,fields:o};return this.storageService.saveForm(r)}deleteForm(e){return this.storageService.deleteForm(e)}submitFormResponses(e,t){return this.getForm(e)?this.storageService.saveFormSubmission(e,t):null}getFormSubmissions(e){return this.storageService.getFormSubmissions(e)}}const y=class y{static getInstance(){return y.instance||(y.instance=new y),y.instance}showNotification(e,t="info"){const s=document.createElement("div");s.className=`notification ${t}`,s.textContent=e,document.body.appendChild(s),setTimeout(()=>{s.style.opacity="0",setTimeout(()=>{s.remove()},300)},3e3)}};q(y,"instance");let x=y;const me=new le,f=new ue(me),pe=new ce,F=new x,ve=window.matchMedia("(prefers-color-scheme: dark)"),J=localStorage.getItem("theme");let a=null,T=null,b=null,D=!1;J==="dark"||!J&&ve.matches?document.documentElement.setAttribute("data-theme","dark"):document.documentElement.setAttribute("data-theme","light");document.getElementById("mainContent");const N=document.getElementById("viewFormsBtn"),P=document.getElementById("createFormBtn"),_=document.getElementById("formsList"),z=document.getElementById("emptyFormsList"),E=document.getElementById("formsListView"),I=document.getElementById("formBuilderView"),Y=document.getElementById("formPreviewView"),Z=document.getElementById("formResponsesView"),B=document.getElementById("formTitle"),L=document.getElementById("formDescription"),ee=document.getElementById("formFields"),fe=document.getElementById("saveFormBtn"),ge=document.getElementById("previewFormBtn"),he=document.querySelectorAll(".field-type-btn"),A=document.getElementById("fieldModal"),be=document.getElementById("modalTitle"),te=document.getElementById("fieldLabel"),se=document.getElementById("fieldRequired"),G=document.getElementById("optionsContainer"),j=document.getElementById("optionsList"),ye=document.getElementById("addOptionBtn"),Fe=document.getElementById("saveFieldBtn"),Ee=document.getElementById("cancelFieldBtn"),we=document.querySelector(".close-modal"),Ie=document.getElementById("previewFormTitle"),Be=document.getElementById("previewFormDescription"),Le=document.getElementById("previewForm"),Se=document.getElementById("submitPreviewBtn"),$e=document.getElementById("backToEditBtn"),Oe=document.getElementById("theme-toggle");N.addEventListener("click",()=>{h(E),S()});P.addEventListener("click",()=>{h(I),B.value="Untitled Form",L.value="",ee.innerHTML="",a=null,A.classList.add("hidden"),a=null,A.classList.add("hidden")});he.forEach(n=>{n.addEventListener("click",()=>{a||(a=f.createForm(B.value||"Untitled Form",L.value));const e=n.getAttribute("data-type");e&&ne(e)})});Fe.addEventListener("click",De);Ee.addEventListener("click",X);we.addEventListener("click",X);ye.addEventListener("click",M);Oe.addEventListener("click",ke);fe.addEventListener("click",()=>{a?a=f.updateFormDetails(a.id,B.value,L.value):a=f.createForm(B.value||"Untitled Form",L.value),F.showNotification("Form saved successfully!","success"),h(E),S(),a=null});ge.addEventListener("click",()=>{a&&(Ae(),h(Y))});$e.addEventListener("click",()=>{h(I)});Se.addEventListener("click",Ce);S();function ke(){const e=document.documentElement.getAttribute("data-theme")==="light"?"dark":"light";document.documentElement.setAttribute("data-theme",e),localStorage.setItem("theme",e),Te()}function Te(){const n=document.documentElement.getAttribute("data-theme"),e=document.getElementById("theme-icon");e&&(n==="dark"?e.textContent="☀️":e.textContent="🌙")}function h(n){E.classList.add("hidden"),I.classList.add("hidden"),Y.classList.add("hidden"),Z.classList.add("hidden"),n.classList.remove("hidden"),N.classList.remove("active"),P.classList.remove("active"),n===E?N.classList.add("active"):n===I&&P.classList.add("active")}function S(){const n=f.getAllForms();n.length===0?(_.innerHTML="",z.style.display="block"):(z.style.display="none",_.innerHTML=n.map(e=>`
            <div class="form-card" data-id="${e.id}">
                <h3>${e.title||"Untitled Form"}</h3>
                <p>${e.description||"No description"}</p>
                <div class="form-card-actions">
                    <button class="card-btn edit-form-btn" data-id="${e.id}">Edit</button>
                    <button class="card-btn view-responses-btn" data-id="${e.id}">View Responses</button>
                    <button class="card-btn delete-form-btn" data-id="${e.id}">Delete</button>
                </div>
            </div>
        `).join(""),document.querySelectorAll(".edit-form-btn").forEach(e=>{e.addEventListener("click",t=>{t.stopPropagation();const s=e.getAttribute("data-id");s&&Q(s)})}),document.querySelectorAll(".view-responses-btn").forEach(e=>{e.addEventListener("click",t=>{t.stopPropagation();const s=e.getAttribute("data-id");s&&qe(s)})}),document.querySelectorAll(".delete-form-btn").forEach(e=>{e.addEventListener("click",t=>{t.stopPropagation();const s=e.getAttribute("data-id");s&&confirm("Are you sure you want to delete this form?")&&(f.deleteForm(s),S())})}),document.querySelectorAll(".form-card").forEach(e=>{e.addEventListener("click",()=>{const t=e.getAttribute("data-id");t&&Q(t)})}))}function Q(n){a=f.getForm(n),a&&(B.value=a.title,L.value=a.description,H(),h(I))}function H(){a&&(ee.innerHTML=a.fields.sort((n,e)=>n.order-e.order).map(n=>{let e="";switch(n.type){case d.TEXT:e='<input type="text" disabled placeholder="Text field" class="preview-input">';break;case d.RADIO:e=(n.options||[]).map(t=>`
                        <div class="option-preview">
                            <input type="radio" disabled>
                            <label>${t.value}</label>
                        </div>
                    `).join("");break;case d.CHECKBOX:e=(n.options||[]).map(t=>`
                        <div class="option-preview">
                            <input type="checkbox" disabled>
                            <label>${t.value}</label>
                        </div>
                    `).join("");break;case d.DROPDOWN:e=`
                        <select disabled class="preview-select">
                            <option value="">Select an option</option>
                            ${(n.options||[]).map(t=>`
                                <option value="${t.id}">${t.value}</option>
                            `).join("")}
                        </select>
                    `;break}return`
                <div class="form-field" data-id="${n.id}">
                    <div class="field-actions">
                        <button class="field-action edit-field-btn" data-id="${n.id}">
                            <i class="fas fa-edit"></i> Edit
                        </button>
                        <button class="field-action delete-field-btn" data-id="${n.id}">
                            <i class="fas fa-trash"></i> Delete
                        </button>
                    </div>
                    <div class="field-label">
                        ${n.label} ${n.required?'<span class="field-required">*</span>':""}
                    </div>
                    <div class="field-content">
                        ${e}
                    </div>
                </div>
            `}).join(""),document.querySelectorAll(".edit-field-btn").forEach(n=>{n.addEventListener("click",()=>{const e=n.getAttribute("data-id");if(e&&a){const t=a.fields.find(s=>s.id===e);t&&Re(t)}})}),document.querySelectorAll(".delete-field-btn").forEach(n=>{n.addEventListener("click",()=>{const e=n.getAttribute("data-id");e&&a&&confirm("Are you sure you want to delete this field?")&&(a=f.deleteField(a.id,e),H())})}))}function ne(n,e){b=n,D=!!e,T=(e==null?void 0:e.id)||null,te.value=(e==null?void 0:e.label)||"",se.checked=(e==null?void 0:e.required)||!1,n===d.TEXT?G.classList.add("hidden"):(G.classList.remove("hidden"),j.innerHTML="",e&&e.options?e.options.forEach(t=>{oe(t.id,t.value)}):(M(),M())),be.textContent=D?"Edit Field":"Add New Field",A.classList.remove("hidden")}function X(){A.classList.add("hidden"),b=null,D=!1,T=null}function M(){const n=Date.now().toString(36)+Math.random().toString(36).substring(2);oe(n,"")}function oe(n,e){const t=document.createElement("div");t.className="option-item",t.innerHTML=`
        <input type="text" class="option-value" value="${e}" placeholder="Option text" data-id="${n}">
        <button type="button" class="remove-option">✕</button>
    `,t.querySelector(".remove-option").addEventListener("click",()=>{t.remove()}),j.appendChild(t)}function De(){if(!a||!b){alert("Please select a field type.");return}const n=te.value.trim();if(!n){F.showNotification("Please enter a field label.","error");return}console.log(a);const e=se.checked;let t=[];if(b===d.RADIO||b===d.CHECKBOX||b===d.DROPDOWN){const s=j.querySelectorAll(".option-value");if(s.length<2){alert("Please add at least two options.");return}if(t=Array.from(s).map(i=>({id:i.getAttribute("data-id")||"",value:i.value.trim()})),t.some(i=>!i.value)){alert("Please fill in all option values.");return}}D&&T?a=f.updateField(a.id,T,{label:n,required:e,...t.length?{options:t}:{}}):a=f.addField(a.id,b,n,e,t),F.showNotification("Field saved successfully.","success"),X(),H()}function Ae(){a&&(Ie.textContent=a.title||"Untitled Form",Be.textContent=a.description||"",Le.innerHTML=a.fields.sort((n,e)=>n.order-e.order).map(n=>{let e="";const t=`preview_${n.id}`;switch(n.type){case d.TEXT:e=`
                        <input type="text" id="${t}" name="${n.id}" class="preview-input">
                    `;break;case d.RADIO:e=(n.options||[]).map(s=>`
                        <div class="option-item">
                            <input type="radio" id="${t}_${s.id}" name="${n.id}" value="${s.id}">
                            <label for="${t}_${s.id}">${s.value}</label>
                        </div>
                    `).join("");break;case d.CHECKBOX:e=(n.options||[]).map(s=>`
                        <div class="option-item">
                            <input type="checkbox" id="${t}_${s.id}" name="${n.id}" value="${s.id}">
                            <label for="${t}_${s.id}">${s.value}</label>
                        </div>
                    `).join("");break;case d.DROPDOWN:e=`
                        <select id="${t}" name="${n.id}" class="preview-select">
                            <option value="">-- Select an option --</option>
                            ${(n.options||[]).map(s=>`
                                <option value="${s.id}">${s.value}</option>
                            `).join("")}
                        </select>
                    `;break}return`
                <div class="preview-field">
                    <div class="preview-label">
                        ${n.label} ${n.required?'<span class="field-required">*</span>':""}
                    </div>
                    <div class="preview-field-content">
                        ${e}
                    </div>
                </div>
            `}).join(""))}function Ce(n){if(n.preventDefault(),!a)return;const e=[];a.fields.forEach(i=>{let o="";switch(i.type){case d.TEXT:const r=document.getElementById(`preview_${i.id}`);o=(r==null?void 0:r.value)||"";break;case d.RADIO:const l=document.querySelector(`input[name="${i.id}"]:checked`);o=(l==null?void 0:l.value)||"";break;case d.DROPDOWN:const c=document.getElementById(`preview_${i.id}`);o=(c==null?void 0:c.value)||"";break;case d.CHECKBOX:const v=document.querySelectorAll(`input[name="${i.id}"]:checked`);o=Array.from(v).map(g=>g.value);break}e.push({fieldId:i.id,value:o})});const t=pe.validateFormSubmission(a,e);if(t.length>0){alert(`Please fix the following errors:
${t.join(`
`)}`);return}f.submitFormResponses(a.id,e)?(F.showNotification("Form submitted successfully!","success"),h(E),S()):F.showNotification("An error occurred while submitting the form.","error")}function Re(n){ne(n.type,n)}function qe(n){var v;const e=f.getForm(n),t=f.getFormSubmissions(n);if(!e)return;const s=document.getElementById("exportResponsesBtn"),i=s.cloneNode(!0);(v=s.parentNode)==null||v.replaceChild(i,s),i.addEventListener("click",()=>{try{const g=xe(e,t),u=new Blob([g],{type:"application/json"}),m=window.URL.createObjectURL(u),p=document.createElement("a");p.href=m,p.download=`${e.title||"form"}_response.json`,document.body.appendChild(p),p.click(),window.URL.revokeObjectURL(m),document.body.removeChild(p)}catch(g){console.log("Export error ",g),F.showNotification("Error exporting responses","error")}});const o=document.getElementById("responsesFormTitle"),r=document.getElementById("responsesSummary"),l=document.getElementById("responsesList");if(o.textContent=`Responses for: ${e.title||"Untitled Form"}`,r.innerHTML=`
        <div class="summary-card">
            <h3>Total Submissions</h3>
            <p class="summary-number">${t.length}</p>
        </div>
    `,t.length===0)l.innerHTML='<div class="empty-state">No responses yet.</div>';else{const g=e.fields.reduce((u,m)=>(u[m.id]=m,u),{});l.innerHTML=t.map((u,m)=>{const p=new Date(u.submittedAt),$=p.toLocaleDateString()+" "+p.toLocaleTimeString(),C=u.responses.map(O=>{var U;const w=g[O.fieldId];if(!w)return"";let k="";switch(w.type){case d.TEXT:k=O.value;break;case d.RADIO:case d.DROPDOWN:const ie=O.value,V=(U=w.options)==null?void 0:U.find(R=>R.id===ie);k=V?V.value:"Unknown option";break;case d.CHECKBOX:k=O.value.map(R=>{var W;const K=(W=w.options)==null?void 0:W.find(re=>re.id===R);return K?K.value:"Unknown option"}).join(", ");break}return`
                    <div class="response-item">
                        <div class="response-question">${w.label}</div>
                        <div class="response-answer">${k||"No response"}</div>
                    </div>
                `}).join("");return`
                <div class="response-card">
                    <div class="response-header">
                        <h3>Response #${m+1}</h3>
                        <div class="response-date">${$}</div>
                    </div>
                    <div class="response-body">
                        ${C}
                    </div>
                </div>
            `}).join("")}document.getElementById("backToFormsBtn").addEventListener("click",()=>{h(E)}),h(Z)}function xe(n,e){const t=n.fields.reduce((o,r)=>(o[r.id]=r,o),{}),s={formTitle:n.title,formDescription:n.description,submissions:e.map(o=>{const r=o.responses.reduce((l,c)=>{var g;const v=t[c.fieldId];if(v){let u=c.value;if((v.type===d.RADIO||v.type===d.DROPDOWN)&&typeof u=="string"){const m=(g=v.options)==null?void 0:g.find(p=>p.id===u);u=m?m.value:u}v.type===d.CHECKBOX&&Array.isArray(u)&&(u=u.map(m=>{var $;const p=($=v.options)==null?void 0:$.find(C=>C.id===m);return p?p.value:m})),l[v.label]=u}return l},{});return{submissionDate:new Date(o.submittedAt).toISOString(),responses:r}})};return JSON.stringify(s,null,2)}
